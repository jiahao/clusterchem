Clusterchem is a tool for moderate-scale quantum chemistry calculations.

This collection of scripts is designed for running multiscale quantum
mechanical/molecular mechanical (QM/MM) electronic structure calculations
and was originally intended to streamline excited-state calculations
using time-dependent density functional theory on aggregates of free base
phthalocynanine molecules..

User-level scripts
------------------

SubmitJob.py
============

Given a directory of CHARMM CRD coordinate files and RTF topology files
containing definitions of atomic charges, this script will iterate over
a specified list of molecule IDs to generate input decks for QM/MM
calculations. For each input deck, one specific molecule will be treated
quantum mechanically while the others will be incorporated into the calculation
with electrostatic embedding, i.e. they will be represented as a cloud of
point charges. The calculations are then prepared for submission to a Grid
Engine batch queuing system as an array job.

Archive.py
==========
This script collates data from Q-Chem output files belonging to the array job
generated by SubmitJob.py and stores them in a HDF5 archive file.  The Q-Chem
output files are parsed and some data are extracted. Currently, this script
only extracts ground state and excited state energies as well as transition
dipole matrix elements. The Q-Chem output files can optionally be deleted to
save disk space. Also, this script also cleans up redirected I/O files from
the Grid Engine scheduler and scans them for errors. 

Analyze.py
==========
Scans a HDF5 file for missing calculation data and regenerates a dispatch list
for use with JobHandler.py

Also has some analysis routines specifically for phthalocynanine calculations

MakeHamiltonians.py
===================
Creates one-exciton Hamitonians from available excited state data.
Most of this is specific to phthalocyanine calculations.

Requirements
------------
-  [http://gridengine.org/blog/2011/11/23/what-now/](Sun Grid Engine) or compatible batch queuing system
-  A licensed copy of [http://q-chem.com](Q-Chem)
-  [http://python.org](Python) 2.6 or later
 -  [http://numpy.scipy.org](numpy)
 -  [http://pytables.org](pytables)
 -  [https://github.com/jiahao/pysge](PySGE) installed as SGE (I really should fix this)
 -  (In a future release, will require a fork of [https://github.com/jiahao/openqube](openqube) that supports Q-Chem file parsing)

